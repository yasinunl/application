{"ast":null,"code":"var _jsxFileName = \"D:\\\\Yasinn\\\\React\\\\freelance\\\\src\\\\context\\\\ScriptsContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useEffect, useState } from \"react\";\nimport FreelancerMenu from \"../component/leftContent/freelancerMenu\";\nimport InboxModal from \"../component/modal/inboxModal\";\nimport JobsMenu from \"../component/leftContent/jobsMenu\";\nimport LoginModal from \"../component/modal/loginModal\";\nimport MessageModal from \"../component/modal/messageModal\";\nimport NewPostModal from \"../component/modal/newPostModal\";\nimport SignUpModal from \"../component/modal/signUpModal\";\nimport UserMenu from \"../component/rightContent/userMenu\";\nimport FilterList from \"../component/rightContent/filterList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ScriptsContext = /*#__PURE__*/createContext();\nconst ScriptsContextProvider = props => {\n  _s();\n  const [modalControl, setModalControl] = useState(false);\n  const openModal = () => {\n    if (modalControl) {\n      setModalControl(false);\n    } else {\n      setModalControl(true);\n    }\n  };\n  ///////////////////////////////////////////////////////////////////////////////////////\n  //Modal Close\n  ///////////////////////////////////////////////////////////////////////////\n  //Modals\n  const [modalComponents] = useState({\n    login: /*#__PURE__*/_jsxDEV(LoginModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 12\n    }, this),\n    signup: /*#__PURE__*/_jsxDEV(SignUpModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this),\n    inbox: /*#__PURE__*/_jsxDEV(InboxModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 12\n    }, this),\n    newPost: /*#__PURE__*/_jsxDEV(NewPostModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 14\n    }, this),\n    message: /*#__PURE__*/_jsxDEV(MessageModal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 14\n    }, this)\n  });\n  const [modalName, setModalName] = useState(\"\");\n  const changeModal = nameOfModal => {\n    setModalName(nameOfModal);\n  };\n  ////////////////////////////////////////////////////////////////////\n  //Left Menu Change\n  const [jobFreelanceMenu] = useState({\n    freelance: /*#__PURE__*/_jsxDEV(FreelancerMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 16\n    }, this),\n    jobs: /*#__PURE__*/_jsxDEV(JobsMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }, this)\n  });\n  const [menuName, setMenuName] = useState(\"jobs\");\n  const leftMenuChange = nameOfMenu => {\n    setMenuName(nameOfMenu);\n  }; ////////////////////////////////////////////////////////////////\n  //Right Menu Change\n  const [userOtherMenu, setUserOtherMenu] = useState({\n    \"menuItem\": /*#__PURE__*/_jsxDEV(UserMenu, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this),\n    \"menuName\": \"userInfo\"\n  });\n  const [userOtherMenuName, setUserOtherMenuName] = useState(\"userInfo\");\n  const rightMenuChange = () => {\n    if (userOtherMenuName === \"userInfo\") {\n      setUserOtherMenu({\n        \"menuItem\": /*#__PURE__*/_jsxDEV(JobsMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this),\n        \"menuName\": \"other\"\n      });\n      setUserOtherMenuName(\"other\");\n    } else {\n      setUserOtherMenu({\n        \"menuItem\": /*#__PURE__*/_jsxDEV(FilterList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this),\n        \"menuName\": \"userInfo\"\n      });\n      setUserOtherMenuName(\"userInfo\");\n    }\n  }; //////////////////////////////////////////////////////////////////////////\n  ///Alert Hidden\n  const [alertHidden, setAlertHidden] = useState(false);\n  const changeAlert = () => {\n    setAlertHidden(true);\n    setTimeout(() => {\n      setAlertHidden(false);\n    }, 2000);\n  };\n  useEffect(() => {}, [menuName, modalName, userOtherMenuName, modalControl, alertHidden]);\n  return /*#__PURE__*/_jsxDEV(ScriptsContext.Provider, {\n    value: {\n      modalControl,\n      openModal,\n      modalComponents,\n      modalName,\n      changeModal,\n      userOtherMenu,\n      rightMenuChange,\n      leftMenuChange,\n      menuName,\n      jobFreelanceMenu,\n      changeAlert,\n      alertHidden\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(ScriptsContextProvider, \"uroFqkr5quTAi/tFY3B5LLjUUHk=\");\n_c = ScriptsContextProvider;\nexport default ScriptsContextProvider;\nvar _c;\n$RefreshReg$(_c, \"ScriptsContextProvider\");","map":{"version":3,"names":["createContext","useEffect","useState","FreelancerMenu","InboxModal","JobsMenu","LoginModal","MessageModal","NewPostModal","SignUpModal","UserMenu","FilterList","jsxDEV","_jsxDEV","ScriptsContext","ScriptsContextProvider","props","_s","modalControl","setModalControl","openModal","modalComponents","login","fileName","_jsxFileName","lineNumber","columnNumber","signup","inbox","newPost","message","modalName","setModalName","changeModal","nameOfModal","jobFreelanceMenu","freelance","jobs","menuName","setMenuName","leftMenuChange","nameOfMenu","userOtherMenu","setUserOtherMenu","userOtherMenuName","setUserOtherMenuName","rightMenuChange","alertHidden","setAlertHidden","changeAlert","setTimeout","Provider","value","children","_c","$RefreshReg$"],"sources":["D:/Yasinn/React/freelance/src/context/ScriptsContext.js"],"sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport FreelancerMenu from \"../component/leftContent/freelancerMenu\";\r\nimport InboxModal from \"../component/modal/inboxModal\";\r\nimport JobsMenu from \"../component/leftContent/jobsMenu\";\r\nimport LoginModal from \"../component/modal/loginModal\";\r\nimport MessageModal from \"../component/modal/messageModal\";\r\nimport NewPostModal from \"../component/modal/newPostModal\";\r\nimport SignUpModal from \"../component/modal/signUpModal\";\r\nimport UserMenu from \"../component/rightContent/userMenu\";\r\nimport FilterList from \"../component/rightContent/filterList\";\r\nexport const ScriptsContext = createContext();\r\n\r\nconst ScriptsContextProvider = (props)=>{\r\n    const [modalControl, setModalControl] = useState(false)\r\n  const openModal = ()=>{\r\n    if(modalControl){\r\n        setModalControl(false);\r\n    }else{\r\n        setModalControl(true);\r\n    }\r\n  }\r\n  ///////////////////////////////////////////////////////////////////////////////////////\r\n  //Modal Close\r\n   ///////////////////////////////////////////////////////////////////////////\r\n  //Modals\r\n  const [modalComponents] = useState({\r\n    login: <LoginModal />,\r\n    signup: <SignUpModal />,\r\n    inbox: <InboxModal />,\r\n    newPost: <NewPostModal />,\r\n    message: <MessageModal />,\r\n  });\r\n  const [modalName, setModalName] = useState(\"\");\r\n  const changeModal = (nameOfModal) => {\r\n    setModalName(nameOfModal);\r\n  };\r\n  ////////////////////////////////////////////////////////////////////\r\n  //Left Menu Change\r\n  const [jobFreelanceMenu] = useState({\r\n    freelance: <FreelancerMenu />,\r\n    jobs: <JobsMenu />,\r\n  });\r\n  const [menuName, setMenuName] = useState(\"jobs\");\r\n  const leftMenuChange = (nameOfMenu) => {\r\n    setMenuName(nameOfMenu);\r\n  }; ////////////////////////////////////////////////////////////////\r\n  //Right Menu Change\r\n  const [userOtherMenu, setUserOtherMenu] = useState({\r\n    \"menuItem\": <UserMenu />,\r\n    \"menuName\": \"userInfo\",\r\n  });\r\n  const [userOtherMenuName, setUserOtherMenuName] = useState(\"userInfo\");\r\n  const rightMenuChange = () => {\r\n    if (userOtherMenuName === \"userInfo\") {\r\n      setUserOtherMenu({\r\n        \"menuItem\": <JobsMenu />,\r\n        \"menuName\": \"other\",\r\n      });\r\n      setUserOtherMenuName(\"other\");\r\n    } else {\r\n      setUserOtherMenu({\r\n        \"menuItem\": <FilterList />,\r\n        \"menuName\": \"userInfo\",\r\n      });\r\n      setUserOtherMenuName(\"userInfo\");\r\n    }\r\n  };//////////////////////////////////////////////////////////////////////////\r\n  ///Alert Hidden\r\n  const [alertHidden, setAlertHidden] = useState(false)\r\n  const changeAlert = () => {\r\n    setAlertHidden(true);\r\n    setTimeout(() => {setAlertHidden(false);}, 2000)\r\n  }\r\n  useEffect(() => {}, [menuName, modalName, userOtherMenuName,modalControl, alertHidden]);\r\n\r\n  return (\r\n    <ScriptsContext.Provider value={{modalControl,openModal, modalComponents, modalName,changeModal,\r\n          userOtherMenu,rightMenuChange,leftMenuChange, menuName, jobFreelanceMenu, changeAlert, alertHidden}} >\r\n        {props.children}\r\n    </ScriptsContext.Provider>\r\n  )\r\n}\r\nexport default ScriptsContextProvider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}