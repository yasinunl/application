{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"http://127.0.0.1:5000/api/\";\naxios.interceptors.response.use(resp => resp, async error => {\n  if (error.response.status === 401) {\n    const response = await axios.post('/user/refresh', {}, {\n      withCredentials: true\n    });\n    if (response.status === 200) {\n      axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + response.data[\"access_token\"];\n      return axios(error.config);\n    }\n  }\n  return error;\n});","map":{"version":3,"names":["axios","defaults","baseURL","interceptors","response","use","resp","error","status","post","withCredentials","headers","common","data","config"],"sources":["D:/Yasinn/React/freelance/src/interceptors/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://127.0.0.1:5000/api/\"\r\n\r\naxios.interceptors.response.use(\r\n    resp => resp,async error => {\r\n        if(error.response.status === 401){\r\n            const response = await axios.post('/user/refresh', {}, {withCredentials: true});\r\n            \r\n            if (response.status === 200){\r\n                axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + response.data[\"access_token\"]\r\n\r\n                return axios(error.config)\r\n            }\r\n        }\r\n        return error;\r\n    }\r\n)"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,4BAA4B;AAErDF,KAAK,CAACG,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC3BC,IAAI,IAAIA,IAAI,EAAC,MAAMC,KAAK,IAAI;EACxB,IAAGA,KAAK,CAACH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAC;IAC7B,MAAMJ,QAAQ,GAAG,MAAMJ,KAAK,CAACS,IAAI,CAAC,eAAe,EAAE,CAAC,CAAC,EAAE;MAACC,eAAe,EAAE;IAAI,CAAC,CAAC;IAE/E,IAAIN,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAC;MACxBR,KAAK,CAACC,QAAQ,CAACU,OAAO,CAACC,MAAM,CAAC,eAAe,CAAC,GAAG,SAAS,GAAGR,QAAQ,CAACS,IAAI,CAAC,cAAc,CAAC;MAE1F,OAAOb,KAAK,CAACO,KAAK,CAACO,MAAM,CAAC;IAC9B;EACJ;EACA,OAAOP,KAAK;AAChB,CAAC,CACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}