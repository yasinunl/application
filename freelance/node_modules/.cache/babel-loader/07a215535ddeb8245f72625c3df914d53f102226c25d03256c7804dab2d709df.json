{"ast":null,"code":"import axios from \"axios\";\naxios.defaults.baseURL = \"http://127.0.0.1:5000/api/\";\naxios.defaults.withCredentials = true;\n/* \r\naxios.interceptors.response.use(\r\n    res => res,async error => {\r\n        if(error.response.status === 401){\r\n            console.log(\"asd\")\r\n            try{\r\n                const response = await axios.post('/user/refresh', {});\r\n                console.log(response);\r\n            if (response.status === 200){\r\n                axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + response.data[\"access_token\"]\r\n\r\n                return axios(error.config)\r\n            }\r\n            }catch{\r\n                return\r\n            }\r\n                \r\n        }\r\n        return error;\r\n    }\r\n) */","map":{"version":3,"names":["axios","defaults","baseURL","withCredentials"],"sources":["D:/Yasinn/React/freelance/src/interceptors/axios.js"],"sourcesContent":["import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://127.0.0.1:5000/api/\"\r\naxios.defaults.withCredentials = true;\r\n/* \r\naxios.interceptors.response.use(\r\n    res => res,async error => {\r\n        if(error.response.status === 401){\r\n            console.log(\"asd\")\r\n            try{\r\n                const response = await axios.post('/user/refresh', {});\r\n                console.log(response);\r\n            if (response.status === 200){\r\n                axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + response.data[\"access_token\"]\r\n\r\n                return axios(error.config)\r\n            }\r\n            }catch{\r\n                return\r\n            }\r\n                \r\n        }\r\n        return error;\r\n    }\r\n) */"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzBA,KAAK,CAACC,QAAQ,CAACC,OAAO,GAAG,4BAA4B;AACrDF,KAAK,CAACC,QAAQ,CAACE,eAAe,GAAG,IAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}